<%@ include file="./init.jsp" %>

<script> //BUILD A TREE OBJECT
	let tree=<%=request.getAttribute("folders")%>
		.map(f=>({children:[],...f}))
		.reduce((a,f)=>({[f.id]:f,...a}), ({"0":{id:"0",parent:"0",name:"0",children:[]}}));;
	
	<%=request.getAttribute("articles")%>.forEach(a=>{
		if(!tree[a.folder].articles)tree[a.folder].articles=[];
		tree[a.folder].articles.push(a);
	});
		
	Object.keys(tree).forEach(k=>{
		if(k=="0")return;
		let f=tree[k];
		if(!tree[f.parent].children)tree[f.parent].children=[];
		tree[f.parent].children.push(f);
	});

	tree=tree[0];
</script>

<ul id="contentTree"></ul>

<aui:script use="node">
	function addTogglerToCaret(caret){
  		caret.addEventListener("click", function() {
    			this.parentElement.querySelector(".nested").classList.toggle("active");
    			this.classList.toggle("caret-down");
  		});
	}
	function addChildToDomFolder(domE,ch){
		let li=document.createElement("li");
	    li.innerHTML=ch.title?ch.title: 
	    	'<span class="caret">'+ch.name+'</span><ul class="nested"></ul>';
	    domE.append(li);
	    return li;
	}
	function recursivePaintTree(domE,t){
		t.children.forEach(f=>{
			newE=Array.from(addChildToDomFolder(domE,f).getElementsByTagName("ul"))[0];
			recursivePaintTree(newE,f);
		});
		if(t.articles)t.articles.forEach(a=>addChildToDomFolder(domE,a));
	}
	
	recursivePaintTree(A.one("#contentTree"),tree);//THIS ADDS THE WHOLE TREE STRUCTURE
	Array.from(document.getElementsByClassName("caret")).forEach(caret=>addTogglerToCaret(caret));//THIS ADDS THE TOGGLE FUNCTIONALITY
</aui:script>
