package webcontent.service;

import com.liferay.journal.model.JournalArticle;
import com.liferay.journal.model.JournalFolder;
import com.liferay.journal.service.JournalFolderServiceUtil;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

import org.osgi.service.component.annotations.Component;

/**
 * @author nimisha
 */
@Component(
	immediate = true,
	property = {
		// TODO enter required service properties
	},
	service = WebcontentService.class
)
public class WebcontentService  {

	public List<JournalFolder> getJournalFoldersFromObject(List<Object> jfList) {

		List<JournalFolder> journalFolders=jfList.stream().filter(a->
		a.getClass().getName().contains("JournalFolder")
	).map(x->((JournalFolder)x)).collect(Collectors.toList());
		
		return journalFolders;
		
	}
	
	
	public List<JournalArticle> getJournalArticleFromObject(List<Object> jfList){
		List<JournalArticle> journalArticles=jfList.stream().filter(a->
		a.getClass().getName().contains("JournalArticle")
	).map(x->((JournalArticle)x)).filter(x->x.getDDMStructureKey().equals("38121")).collect(Collectors.toList());
		
		return journalArticles;
	}
	
	public Map<JournalFolder,List<Object>> getMenuListing(long groupId, JournalFolder journalFolder, Map<JournalFolder,List<Object>> listing){
		int jfCount=JournalFolderServiceUtil.getFoldersAndArticlesCount(groupId, journalFolder.getFolderId(), 0);
		List<Object> jfList=JournalFolderServiceUtil.getFoldersAndArticles(groupId, journalFolder.getFolderId(), 0,0, jfCount, null);
		if(jfList!=null) {
			List<Object> child= new ArrayList<>();
			List<JournalArticle> journalArticles=getJournalArticleFromObject(jfList);
			child.addAll(journalArticles);
			List<JournalFolder> journalFolders=getJournalFoldersFromObject(jfList);
			child.addAll(journalFolders);
			listing.put(journalFolder, child);
			journalFolders.forEach(folder->{
				getMenuListing(groupId, folder,listing);
			});
		}
		return listing;
		
		
		
	}

}